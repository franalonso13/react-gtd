{"version":3,"sources":["components/Pages/Panel/Task.jsx","components/Pages/Panel/TaskInput.jsx","components/Pages/Panel/Column.jsx","components/Pages/Panel/ColorPicker.jsx","components/Pages/Panel/Dialog.jsx","components/Pages/Panel/Panel.jsx","components/Pages/Calendar/Calendar.jsx","components/Pages/Visualizar/Visualizar.jsx","components/App/CustomAvatar.jsx","components/App/App.jsx","components/App/index.js","serviceWorker.js","index.js"],"names":["Task","props","state","task","id","handleStateTask","bind","column","this","taskId","taskIds","splice","index","updates","user","uid","firebase","database","ref","update","stateTasks","newState","tasks","columns","filter","console","log","onClickClose","setState","fechaVencimiento","undefined","moment","locale","Date","format","draggableId","provided","snapshot","draggableProps","dragHandleProps","innerRef","className","isDragging","style","backgroundColor","colorTask","taskColorType","color","border","IconButton","aria-label","onClick","handleRemove","fontSize","handleClick","visible","content","React","Component","TaskInput","value","handleChange","handleSubmit","onClose","event","target","trim","input","rows","placeholder","onChange","onKeyDown","key","autoFocus","type","aria-hidden","Column","Fragment","title","droppableId","droppableProps","map","CustomPicker","handleChangeComplete","background","hex","newStateDialog","handleStateDialog","handleResetColor","colors","onChangeComplete","e","CustomDialog","description","fechaInicio","fechaFin","handleEditTask","handleEditDescription","onBlurHandleTask","onBlurHandleDes","textTareaTask","createRef","textTareaDescription","focusTextTarea","current","focus","header","onBlur","width","contentStyle","overflowY","modal","blockScroll","maskClassName","onHide","inputId","name","checked","htmlFor","taskType","minDate","maxDate","showTime","hourFormat","fechaVenciemiento","initialData","columnOrder","loading","Panel","onDragEnd","result","destination","source","start","finish","newTaskIds","Array","from","newColumn","startTaskIds","newStart","finishTaskIds","newFinish","showInfo","once","then","panel","val","forEach","columnId","datas","weekday","growl","show","sticky","severity","summary","detail","el","newTaskKey","child","push","concat","Calendar","calendarComponentRef","calendarWeekends","calendarEvents","toggleWeekends","gotoPast","getApi","gotoDate","events","Object","values","end","esLocale","left","center","right","plugins","dayGridPlugin","timeGridPlugin","interactionPlugin","weekends","Visualizar","data","labels","proximasAcciones","eventos","fecha1","fecha2","diff","getRandomColor","diff1","diff2","i","Math","floor","random","datasets","auxColors","includes","length","height","CustomAvatar","logout","button","handleLogout","Avatar","alt","displayName","src","photoURL","App","handleAuth","auth","onAuthStateChanged","provider","GoogleAuthProvider","signInWithPopup","email","catch","error","code","message","signOut","minWidth","exact","to","activeClassName","path","class","renderLoginButton","Boolean","window","location","hostname","match","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a07df027.chunk.js","sourcesContent":["import React from \"react\";\nimport { Draggable } from \"react-beautiful-dnd\";\nimport firebase from \"firebase/app\";\nimport \"firebase/database\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport moment from \"moment\";\nimport \"moment/locale/es\";\n\nclass Task extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      task: {\n        id: this.props.task.id,\n      },\n    };\n    this.handleStateTask = this.handleStateTask.bind(this);\n  }\n  handleRemove() {\n    let column = this.props.column;\n    let taskId = this.props.task.id;\n    let taskIds = column.taskIds;\n    taskIds.splice(this.props.index, 1);\n\n    let updates = {};\n    updates[\"/users/\" + this.props.user.uid + \"/tasks/\" + taskId] = null;\n    updates[\"/users/\" + this.props.user.uid + \"/columns/\" + column.id] = {\n      ...column,\n      taskIds: taskIds,\n    };\n    firebase.database().ref().update(updates);\n\n    delete this.props.stateTasks[this.props.task.id];\n    const newState = {\n      tasks: this.props.stateTasks,\n      columns: {\n        ...this.props.columns,\n        [this.props.column.id]: {\n          ...this.props.column,\n          taskIds: this.props.column.taskIds.filter(\n            (taskId) => taskId !== this.props.task.id\n          ),\n        },\n      },\n    };\n    console.log(newState);\n    this.props.onClickClose(newState);\n  }\n\n  handleStateTask(newState) {\n    this.setState(newState);\n  }\n\n  render() {\n    let fechaVencimiento = null;\n    if (\n      this.props.task.fechaVencimiento !== undefined &&\n      this.props.task.fechaVencimiento !== null\n    ) {\n      moment.locale(\"es\");\n      fechaVencimiento = moment(\n        new Date(this.props.task.fechaVencimiento)\n      ).format(\"DD-MMMM  HH:mm\");\n    }\n\n    return (\n      <Draggable\n        draggableId={this.props.task.id}\n        index={this.props.index}\n        //isDragDisabled={isDragDisabled}\n      >\n        {(provided, snapshot) => (\n          <div\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n            ref={provided.innerRef}\n            className={`card mb-2 shadow border-0\n\n               ${snapshot.isDragging && \"shadow\"}`}\n          >\n            <div\n              className=\"card-body p-2 rounded\"\n              style={{\n                backgroundColor:\n                  this.props.task.colorTask !== undefined &&\n                  this.props.task.taskColorType !== undefined &&\n                  this.props.task.taskColorType === \"Proyecto\"\n                    ? this.props.task.colorTask\n                    : \"white\",\n                color:\n                  this.props.task.colorTask === \"#fff\" ||\n                  this.props.task.taskColorType === undefined ||\n                  (this.props.task.taskColorType !== undefined &&\n                    this.props.task.taskColorType === \"Tarea\")\n                    ? \"black\"\n                    : \"white\",\n                border:\n                  this.props.task.taskColorType !== undefined\n                    ? \"2px solid \" + this.props.task.colorTask\n                    : \"none\",\n              }}\n            >\n              <IconButton\n                aria-label=\"delete\"\n                className=\"p-1 close\"\n                onClick={() => this.handleRemove()}\n              >\n                <DeleteIcon fontSize=\"small\" />\n              </IconButton>\n\n              <div\n                onClick={() => {\n                  console.log(this.state.task);\n                  this.props.handleClick({\n                    visible: true,\n                    task: this.state.task,\n                  });\n                }}\n              >\n                <p className=\"m-0\">{this.props.task.content}</p>\n                <p className=\"font-weight-bold mb-0 mt-1\">{fechaVencimiento}</p>\n              </div>\n            </div>\n          </div>\n        )}\n      </Draggable>\n    );\n  }\n}\n\nexport default Task;\n","import React from \"react\";\nimport firebase from \"firebase/app\";\nimport \"firebase/database\";\n\nclass TaskInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: \"\",\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.onClose = this.onClose.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({ value: event.target.value });\n  }\n\n  handleSubmit(event) {\n    const taskId = this.props.task.id;\n    const column = this.props.column;\n    let updates = {};\n    //console.log(this.state.value);\n    if (this.state.value.trim() !== \"\") {\n      updates[\"/users/\" + this.props.user.uid + \"/tasks/\" + taskId] = {\n        id: taskId,\n        content: this.state.value,\n        input: false,\n        colorTask: \"#fff\",\n      };\n\n      updates[\"/users/\" + this.props.user.uid + \"/columns/\" + column.id] = {\n        ...column,\n        taskIds: column.taskIds,\n      };\n      firebase.database().ref().update(updates);\n\n      const newState = {\n        tasks: {\n          ...this.props.stateTasks,\n          [taskId]: {\n            id: taskId,\n            content: this.state.value,\n            input: false,\n            colorTask: \"#fff\",\n          },\n        },\n        columns: {\n          ...this.props.columns,\n          [column.id]: {\n            ...column,\n            taskIds: column.taskIds,\n          },\n        },\n      };\n      this.props.onClickClose(newState);\n    } else {\n      this.onClose();\n    }\n  }\n\n  onClose() {\n    delete this.props.stateTasks[this.props.task.id];\n    const newState = {\n      tasks: this.props.stateTasks,\n      columns: {\n        ...this.props.columns,\n        [this.props.column.id]: {\n          ...this.props.column,\n          taskIds: this.props.column.taskIds.filter(\n            (taskId) => taskId !== this.props.task.id\n          ),\n        },\n      },\n    };\n    console.log(newState);\n    this.props.onClickClose(newState);\n  }\n\n  render() {\n    return (\n      <div>\n        <form>\n          <div className=\"form-group\">\n            <textarea\n              className=\"form-control\"\n              id=\"newTask\"\n              rows=\"3\"\n              value={this.state.value}\n              placeholder=\"Escribe una nueva tarea...\"\n              onChange={this.handleChange}\n              onKeyDown={(event) => {\n                if (event.key === \"Enter\") {\n                  this.handleSubmit(event);\n                }\n              }}\n              autoFocus\n            ></textarea>\n          </div>\n          <button\n            type=\"button\"\n            className=\"btn btn-primary btn-sm\"\n            onClick={this.handleSubmit}\n          >\n            Añadir\n          </button>\n          <button\n            type=\"button\"\n            className=\"close\"\n            aria-label=\"Close\"\n            onClick={this.onClose}\n          >\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default TaskInput;\n","import React from \"react\";\nimport Task from \"./Task\";\nimport { Droppable } from \"react-beautiful-dnd\";\nimport TaskInput from \"./TaskInput\";\nclass Column extends React.Component {\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"p-2 text-center bgColorTitleColumn\">\n          <h5>{this.props.column.title}</h5>\n        </div>\n        <Droppable droppableId={this.props.column.id}>\n          {(provided, snapshot) => (\n            <div\n              {...provided.droppableProps}\n              ref={provided.innerRef}\n              // className={`taskList\n              // ${snapshot.isDraggingOver && \"taskList--drop\"}`}\n              className=\"taskList\"\n            >\n              {this.props.tasks.map((task, index) => {\n                if (\n                  task !== undefined &&\n                  task.input !== undefined &&\n                  task.input === true\n                ) {\n                  return (\n                    <TaskInput\n                      user={this.props.user}\n                      key={task.id}\n                      stateTasks={this.props.stateTasks}\n                      task={task}\n                      column={this.props.column}\n                      columns={this.props.columns}\n                      onClickClose={this.props.onClickClose}\n                    />\n                  );\n                } else if (task !== undefined) {\n                  return (\n                    <Task\n                      user={this.props.user}\n                      column={this.props.column}\n                      columns={this.props.columns}\n                      key={task.id}\n                      task={task}\n                      stateTasks={this.props.stateTasks}\n                      index={index}\n                      onClickClose={this.props.onClickClose}\n                      handleClick={this.props.handleClick}\n                    />\n                  );\n                }\n                return \"\";\n              })}\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Column;\n","import React from \"react\";\nimport firebase from \"firebase/app\";\nimport \"firebase/database\";\nimport { CirclePicker } from \"react-color\";\n\nexport default class CustomPicker extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      background: this.props.task.colorTask,\n    };\n  }\n\n  handleChangeComplete = (color, event) => {\n    this.setState({ background: color.hex });\n    const newState = {\n      tasks: {\n        ...this.props.tasks,\n        [this.props.task.id]: {\n          ...this.props.task,\n          colorTask: color.hex,\n        },\n      },\n    };\n    this.props.handleClick(newState);\n    const newStateDialog = {\n      tasks: {\n        ...this.props.tasks,\n        [this.props.task.id]: {\n          ...this.props.task,\n          colorTask: color.hex,\n        },\n      },\n      task: {\n        ...this.props.task,\n        colorTask: color.hex,\n      },\n    };\n    this.props.handleStateDialog(newStateDialog);\n    firebase\n      .database()\n      .ref(\"users/\" + this.props.user.uid)\n      .update(newState);\n  };\n\n  handleResetColor = (color, event) => {\n    this.setState({ background: color });\n    const newState = {\n      tasks: {\n        ...this.props.tasks,\n        [this.props.task.id]: {\n          ...this.props.task,\n          colorTask: color,\n        },\n      },\n    };\n    this.props.handleClick(newState);\n    const newStateDialog = {\n      tasks: {\n        ...this.props.tasks,\n        [this.props.task.id]: {\n          ...this.props.task,\n          colorTask: color,\n        },\n      },\n      task: {\n        ...this.props.task,\n        colorTask: color,\n      },\n    };\n    this.props.handleStateDialog(newStateDialog);\n    firebase\n      .database()\n      .ref(\"users/\" + this.props.user.uid)\n      .update(newState);\n  };\n\n  render() {\n    //console.log(this.props.task.colorTask);\n    return (\n      <div className=\"d-flex align-items-center\">\n        <CirclePicker\n          colors={[\n            \"#f44336\",\n            \"#e91e63\",\n            \"#9c27b0\",\n            \"#3f51b5\",\n            \"#2196f3\",\n            \"#03a9f4\",\n            \"#00bcd4\",\n            \"#009688\",\n            \"#4caf50\",\n            \"#8bc34a\",\n            \"#cddc39\",\n            \"#ff9800\",\n          ]}\n          color={this.state.background}\n          onChangeComplete={this.handleChangeComplete}\n        />\n        <button\n          className=\"button-color ml-3\"\n          onClick={(e) => this.handleResetColor(\"#fff\", e)}\n        >\n          Quitar color\n        </button>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport firebase from \"firebase/app\";\nimport \"firebase/database\";\nimport { Dialog } from \"primereact/dialog\";\nimport { Calendar } from \"primereact/calendar\";\nimport { RadioButton } from \"primereact/radiobutton\";\nimport CustomPicker from \"./ColorPicker\";\n\nexport default class CustomDialog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      task: {\n        ...this.props.task,\n        description: this.props.task.description\n          ? this.props.task.description\n          : \"\",\n        fechaInicio: this.props.task.fechaInicio\n          ? new Date(this.props.task.fechaInicio)\n          : null,\n        fechaFin: this.props.task.fechaFin\n          ? new Date(this.props.task.fechaFin)\n          : null,\n        fechaVencimiento: this.props.task.fechaVencimiento\n          ? new Date(this.props.task.fechaVencimiento)\n          : null,\n      },\n      tasks: this.props.tasks,\n    };\n    this.handleEditTask = this.handleEditTask.bind(this);\n    this.handleEditDescription = this.handleEditDescription.bind(this);\n    this.handleStateDialog = this.handleStateDialog.bind(this);\n    this.onBlurHandleTask = this.onBlurHandleTask.bind(this);\n    this.onBlurHandleDes = this.onBlurHandleDes.bind(this);\n    this.textTareaTask = React.createRef();\n    this.textTareaDescription = React.createRef();\n  }\n\n  handleEditTask(event) {\n    this.setState({\n      task: {\n        ...this.state.task,\n        content: event.target.value,\n      },\n    });\n  }\n  handleEditDescription(event) {\n    this.setState({\n      task: {\n        ...this.state.task,\n        description: event.target.value,\n      },\n    });\n  }\n\n  onBlurHandleTask() {\n    if (this.state.task.content.trim() !== \"\") {\n      const newState = {\n        tasks: {\n          ...this.state.tasks,\n          [this.state.task.id]: {\n            ...this.state.task,\n            content: this.state.task.content,\n          },\n        },\n      };\n      this.props.handleClick(newState);\n      firebase\n        .database()\n        .ref(\"users/\" + this.props.user.uid)\n        .update(newState);\n    } else {\n      this.focusTextTarea();\n    }\n  }\n  focusTextTarea() {\n    this.textTareaTask.current.focus();\n  }\n  onBlurHandleDes() {\n    const newState = {\n      tasks: {\n        ...this.state.tasks,\n        [this.state.task.id]: {\n          ...this.state.task,\n          description: this.state.task.description,\n        },\n      },\n    };\n    this.props.handleClick(newState);\n    firebase\n      .database()\n      .ref(\"users/\" + this.props.user.uid)\n      .update(newState);\n  }\n  handleStateDialog(newState) {\n    this.setState(newState);\n  }\n\n  render() {\n    const header = (\n      <textarea\n        ref={this.textTareaTask}\n        onBlur={this.onBlurHandleTask}\n        onChange={this.handleEditTask}\n        className=\"dialog--Task\"\n        value={this.state.task.content}\n      />\n    );\n    return (\n      <Dialog\n        header={header}\n        visible={this.props.visible}\n        style={{ width: \"50vw\", backgroundColor: \"white\" }}\n        contentStyle={{ overflowY: \"visible\" }}\n        modal={true}\n        blockScroll={true}\n        maskClassName=\"overflow-auto\"\n        onHide={() => {\n          if (this.state.task.content.trim() === \"\") {\n            this.props.handleClick({\n              visible: false,\n            });\n            this.setState({\n              task: {\n                ...this.state.task,\n                content: this.props.task.content,\n              },\n            });\n          } else {\n            this.props.handleClick({ visible: false });\n          }\n        }}\n      >\n        <div>\n          <p className=\"h5 font-weight-bold\">Descripción:</p>\n        </div>\n\n        <div className=\"d-block\">\n          <textarea\n            ref={this.textTareaDescription}\n            onBlur={this.onBlurHandleDes}\n            className=\"dialog--Description\"\n            onChange={this.handleEditDescription}\n            value={this.state.task.description}\n            placeholder=\"Introduzca una información más completa...\"\n          />\n        </div>\n        <div className=\"d-block\">\n          <p className=\"mt-3 mb-3 h6 font-weight-bold\">Selecciona un color:</p>\n          <div className=\"d-flex\">\n            <div className=\"m-1\">\n              <RadioButton\n                inputId=\"rbc1\"\n                name=\"taskColorType\"\n                value=\"Proyecto\"\n                className=\"m-1\"\n                onChange={(e) => {\n                  this.setState({\n                    task: {\n                      ...this.state.task,\n                      taskColorType: e.value,\n                    },\n                    tasks: {\n                      ...this.state.tasks,\n                      [this.state.task.id]: {\n                        ...this.state.task,\n                        taskColorType: e.value,\n                      },\n                    },\n                  });\n\n                  const newState = {\n                    tasks: {\n                      ...this.state.tasks,\n                      [this.state.task.id]: {\n                        ...this.state.task,\n                        taskColorType: e.value,\n                      },\n                    },\n                  };\n                  this.props.handleClick(newState);\n                  firebase\n                    .database()\n                    .ref(\"users/\" + this.props.user.uid)\n                    .update(newState);\n                }}\n                checked={this.state.task.taskColorType === \"Proyecto\"}\n              />\n              <label htmlFor=\"rbc1\" className=\"p-radiobutton-label\">\n                Proyecto\n              </label>\n            </div>\n            <div className=\"m-1\">\n              <RadioButton\n                inputId=\"rbc2\"\n                name=\"taskColorType\"\n                value=\"Tarea\"\n                className=\"m-1\"\n                onChange={(e) => {\n                  this.setState({\n                    task: {\n                      ...this.state.task,\n                      taskColorType: e.value,\n                    },\n                    tasks: {\n                      ...this.state.tasks,\n                      [this.state.task.id]: {\n                        ...this.state.task,\n                        taskColorType: e.value,\n                      },\n                    },\n                  });\n\n                  const newState = {\n                    tasks: {\n                      ...this.state.tasks,\n                      [this.state.task.id]: {\n                        ...this.state.task,\n                        taskColorType: e.value,\n                      },\n                    },\n                  };\n                  this.props.handleClick(newState);\n                  firebase\n                    .database()\n                    .ref(\"users/\" + this.props.user.uid)\n                    .update(newState);\n                }}\n                checked={this.state.task.taskColorType === \"Tarea\"}\n              />\n              <label htmlFor=\"rbc2\" className=\"p-radiobutton-label\">\n                Tarea\n              </label>\n            </div>\n          </div>\n          <CustomPicker\n            task={this.state.task}\n            tasks={this.state.tasks}\n            user={this.props.user}\n            handleClick={(newState) => this.props.handleClick(newState)}\n            handleStateDialog={(newState) => this.handleStateDialog(newState)}\n          />\n        </div>\n        <div>\n          <p className=\" mt-3 mb-3 h6 font-weight-bold\">\n            Fechas para un evento o una tarea planificada:\n          </p>\n          <div className=\"m-1\">\n            <RadioButton\n              inputId=\"rb1\"\n              name=\"taskType\"\n              value=\"Tarea Planificada\"\n              onChange={(e) => {\n                this.setState({\n                  task: {\n                    ...this.state.task,\n                    taskType: e.value,\n                  },\n                  tasks: {\n                    ...this.state.tasks,\n                    [this.state.task.id]: {\n                      ...this.state.task,\n                      taskType: e.value,\n                    },\n                  },\n                });\n\n                const newState = {\n                  tasks: {\n                    ...this.state.tasks,\n                    [this.state.task.id]: {\n                      ...this.state.task,\n                      taskType: e.value,\n                    },\n                  },\n                };\n                this.props.handleClick(newState);\n                firebase\n                  .database()\n                  .ref(\"users/\" + this.props.user.uid)\n                  .update(newState);\n              }}\n              checked={this.state.task.taskType === \"Tarea Planificada\"}\n            />\n            <label htmlFor=\"rb1\" className=\"p-radiobutton-label\">\n              Tarea Planificada\n            </label>\n          </div>\n          <div className=\"m-1\">\n            <RadioButton\n              inputId=\"rb2\"\n              name=\"taskType\"\n              value=\"Evento\"\n              onChange={(e) => {\n                this.setState({\n                  task: {\n                    ...this.state.task,\n                    taskType: e.value,\n                  },\n                  tasks: {\n                    ...this.state.tasks,\n                    [this.state.task.id]: {\n                      ...this.state.task,\n                      taskType: e.value,\n                    },\n                  },\n                });\n\n                const newState = {\n                  tasks: {\n                    ...this.state.tasks,\n                    [this.state.task.id]: {\n                      ...this.state.task,\n                      taskType: e.value,\n                    },\n                  },\n                };\n                this.props.handleClick(newState);\n                firebase\n                  .database()\n                  .ref(\"users/\" + this.props.user.uid)\n                  .update(newState);\n              }}\n              checked={this.state.task.taskType === \"Evento\"}\n            />\n            <label htmlFor=\"rb2\" className=\"p-radiobutton-label\">\n              Evento\n            </label>\n          </div>\n          <div className=\"d-flex flex-wrap m-2\">\n            <Calendar\n              className=\"m-2\"\n              minDate={new Date()}\n              maxDate={this.state.task.fechaFin}\n              showTime={true}\n              hourFormat=\"24\"\n              value={this.state.task.fechaInicio}\n              onChange={(e) => {\n                this.setState({\n                  task: {\n                    ...this.state.task,\n                    fechaInicio: e.value,\n                  },\n                  tasks: {\n                    ...this.state.tasks,\n                    [this.state.task.id]: {\n                      ...this.state.task,\n                      fechaInicio: e.value,\n                    },\n                  },\n                });\n\n                const newState = {\n                  tasks: {\n                    ...this.state.tasks,\n                    [this.state.task.id]: {\n                      ...this.state.task,\n                      fechaInicio: e.value,\n                    },\n                  },\n                };\n                this.props.handleClick(newState);\n                firebase\n                  .database()\n                  .ref(\"users/\" + this.props.user.uid)\n                  .update(newState);\n              }}\n            ></Calendar>\n\n            <Calendar\n              className=\"m-2\"\n              minDate={\n                this.state.task.fechaInicio !== null\n                  ? new Date(this.state.task.fechaInicio)\n                  : new Date()\n              }\n              showTime={true}\n              hourFormat=\"24\"\n              value={this.state.task.fechaFin}\n              onChange={(e) => {\n                this.setState({\n                  task: {\n                    ...this.state.task,\n                    fechaFin: e.value,\n                  },\n                  tasks: {\n                    ...this.state.tasks,\n                    [this.state.task.id]: {\n                      ...this.state.task,\n                      fechaFin: e.value,\n                    },\n                  },\n                });\n\n                const newState = {\n                  tasks: {\n                    ...this.state.tasks,\n                    [this.state.task.id]: {\n                      ...this.state.task,\n                      fechaFin: e.value,\n                    },\n                  },\n                };\n                this.props.handleClick(newState);\n                firebase\n                  .database()\n                  .ref(\"users/\" + this.props.user.uid)\n                  .update(newState);\n              }}\n            ></Calendar>\n          </div>\n          <p className=\" mt-3 mb-3 h6 font-weight-bold\">\n            Fecha de vencimiento:\n          </p>\n          <Calendar\n            showTime={true}\n            minDate={new Date()}\n            hourFormat=\"24\"\n            value={this.state.task.fechaVencimiento}\n            className=\"m-2\"\n            onChange={(e) => {\n              this.setState({\n                task: {\n                  ...this.state.task,\n                  fechaVencimiento: e.value,\n                },\n                tasks: {\n                  ...this.state.tasks,\n                  [this.state.task.id]: {\n                    ...this.state.task,\n                    fechaVenciemiento: e.value,\n                  },\n                },\n              });\n\n              const newState = {\n                tasks: {\n                  ...this.state.tasks,\n                  [this.state.task.id]: {\n                    ...this.state.task,\n                    fechaVencimiento: e.value,\n                  },\n                },\n              };\n              this.props.handleClick(newState);\n              firebase\n                .database()\n                .ref(\"users/\" + this.props.user.uid)\n                .update(newState);\n            }}\n          ></Calendar>\n        </div>\n      </Dialog>\n    );\n  }\n}\n","import React from \"react\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport firebase from \"firebase/app\";\nimport \"firebase/database\";\nimport Column from \"./Column\";\nimport \"./Panel.css\";\nimport CustomDialog from \"./Dialog\";\nimport { ProgressSpinner } from \"primereact/progressspinner\";\nimport { Growl } from \"primereact/growl\";\nimport moment from \"moment\";\nimport \"moment/locale/es\";\n\nlet initialData = {\n  tasks: {},\n  columns: {\n    \"column-1\": {\n      id: \"column-1\",\n      title: \"Inbox\",\n      taskIds: [],\n    },\n    \"column-2\": {\n      id: \"column-2\",\n      title: \"Próximas acciones\",\n      taskIds: [],\n    },\n    \"column-3\": {\n      id: \"column-3\",\n      title: \"Proyectos\",\n      taskIds: [],\n    },\n    \"column-4\": {\n      id: \"column-4\",\n      title: \"Algún día\",\n      taskIds: [],\n    },\n    \"column-5\": {\n      id: \"column-5\",\n      title: \"Eventos\",\n      taskIds: [],\n    },\n  },\n  // Facilitate reordering of the columns\n  columnOrder: [\"column-1\", \"column-2\", \"column-3\", \"column-4\", \"column-5\"],\n  visible: false,\n  loading: true,\n};\n\nclass Panel extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = initialData;\n    this.showInfo = this.showInfo.bind(this);\n  }\n\n  componentDidMount() {\n    firebase\n      .database()\n      .ref(\"users/\" + this.props.user.uid)\n      .once(\"value\")\n      .then((snapshot) => {\n        let panel = snapshot.val();\n        if (panel === null) {\n          panel = this.props.initialData;\n          let newState = {\n            ...panel,\n            loading: false,\n          };\n          firebase\n            .database()\n            .ref(\"/users/\" + this.props.user.uid)\n            .update(panel);\n          this.setState(newState);\n        } else {\n          let tasks = {};\n          let columns = panel.columns;\n          let columnOrder = panel.columnOrder;\n\n          this.state.columnOrder.forEach((columnId) => {\n            const column = columns[columnId];\n            if (column.taskIds === undefined) {\n              columns[columnId].taskIds = [];\n            }\n          });\n\n          if (panel.tasks !== undefined) {\n            tasks = panel.tasks;\n          }\n\n          let datas = {\n            tasks: tasks,\n            columns: columns,\n            columnOrder: columnOrder,\n            loading: false,\n          };\n          //console.log(datas);\n\n          this.setState(datas);\n        }\n        //solo se muestra el recordatorio los lunes\n        if (moment().weekday() === 0) {\n          this.showInfo();\n        }\n      });\n  }\n\n  onDragEnd = (result) => {\n    const { destination, source, draggableId } = result;\n\n    if (!destination) {\n      return;\n    }\n\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    ) {\n      return;\n    }\n\n    const start = this.state.columns[source.droppableId];\n    const finish = this.state.columns[destination.droppableId];\n\n    if (start === finish) {\n      const newTaskIds = Array.from(start.taskIds);\n      newTaskIds.splice(source.index, 1);\n      console.log(newTaskIds);\n      newTaskIds.splice(destination.index, 0, draggableId);\n      console.log(newTaskIds);\n\n      const newColumn = {\n        ...start,\n        taskIds: newTaskIds,\n      };\n\n      const newState = {\n        ...this.state,\n        columns: {\n          ...this.state.columns,\n          [newColumn.id]: newColumn,\n        },\n      };\n\n      this.setState(newState);\n      firebase\n        .database()\n        .ref(\"users/\" + this.props.user.uid)\n        .update(newState);\n      return;\n    }\n    // Moving from one list to another\n    const startTaskIds = Array.from(start.taskIds);\n    startTaskIds.splice(source.index, 1);\n    const newStart = {\n      ...start,\n      taskIds: startTaskIds,\n    };\n\n    const finishTaskIds = Array.from(finish.taskIds);\n    finishTaskIds.splice(destination.index, 0, draggableId);\n\n    const newFinish = {\n      ...finish,\n      taskIds: finishTaskIds,\n    };\n\n    const newState = {\n      ...this.state,\n      columns: {\n        ...this.state.columns,\n        [newStart.id]: newStart,\n        [newFinish.id]: newFinish,\n      },\n    };\n    this.setState(newState);\n    firebase\n      .database()\n      .ref(\"users/\" + this.props.user.uid)\n      .update(newState);\n  };\n\n  onClickClose(newState) {\n    this.setState(newState);\n  }\n\n  handleClick(newState) {\n    console.log(newState);\n    console.log(this.state);\n    this.setState(newState);\n  }\n  showInfo() {\n    this.growl.show({\n      sticky: true,\n      severity: \"info\",\n      summary: \"Revisar los proyectos\",\n      detail: \"Organice las tareas asociadas a los proyectos\",\n    });\n  }\n\n  render() {\n    if (this.state.loading) {\n      return (\n        <div className=\"text-center mt-5\">\n          <ProgressSpinner />\n        </div>\n      );\n    } else {\n      return (\n        <React.Fragment>\n          <Growl ref={(el) => (this.growl = el)} />\n          {this.state.visible === true && this.state.task !== undefined && (\n            <CustomDialog\n              visible={this.state.visible}\n              task={this.state.tasks[this.state.task.id]}\n              tasks={this.state.tasks}\n              handleClick={(newState) => this.handleClick(newState)}\n              user={this.props.user}\n            ></CustomDialog>\n          )}\n\n          <DragDropContext onDragEnd={this.onDragEnd}>\n            <div className=\"containerPanel\">\n              {this.state.columnOrder.map((columnId) => {\n                const column = this.state.columns[columnId];\n\n                let tasks;\n                if (column.taskIds !== undefined) {\n                  tasks = column.taskIds.map(\n                    (taskId) => this.state.tasks[taskId]\n                  );\n                } else {\n                  tasks = [];\n                }\n\n                return (\n                  <div key={column.id} className=\"containerColumn\">\n                    <Column\n                      user={this.props.user}\n                      key={column.id}\n                      column={column}\n                      columns={this.state.columns}\n                      tasks={tasks}\n                      stateTasks={this.state.tasks}\n                      onClickClose={(newState) => this.onClickClose(newState)}\n                      handleClick={(newState) => this.handleClick(newState)}\n                    />\n                    <button\n                      className=\"addButton\"\n                      type=\"button\"\n                      onClick={() => {\n                        var newTaskKey = firebase\n                          .database()\n                          .ref()\n                          .child(\"/users/\" + this.props.user.uid)\n                          .push().key;\n\n                        const newState = {\n                          tasks: {\n                            ...this.state.tasks,\n                            [newTaskKey]: {\n                              id: newTaskKey,\n                              content: \"Sin content\",\n                              input: true,\n                            },\n                          },\n                          columns: {\n                            ...this.state.columns,\n                            [column.id]: {\n                              ...column,\n                              taskIds: column.taskIds.concat(newTaskKey),\n                            },\n                          },\n                        };\n\n                        this.setState(newState);\n                      }}\n                    >\n                      +\n                    </button>\n                  </div>\n                );\n              })}\n            </div>\n          </DragDropContext>\n        </React.Fragment>\n      );\n    }\n  }\n}\n\nexport default Panel;\n","import React from \"react\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\"; // needed for dayClick\nimport esLocale from \"@fullcalendar/core/locales/es\";\nimport { ProgressSpinner } from \"primereact/progressspinner\";\nimport firebase from \"firebase/app\";\nimport \"firebase/database\";\n\nimport \"./Calendar.scss\";\n\nexport default class Calendar extends React.Component {\n  calendarComponentRef = React.createRef();\n\n  state = {\n    calendarWeekends: true,\n    calendarEvents: [],\n    loading: true,\n  };\n\n  componentDidMount() {\n    firebase\n      .database()\n      .ref(\"users/\" + this.props.user.uid)\n      .once(\"value\")\n      .then((snapshot) => {\n        let panel = snapshot.val();\n        if (panel === null) {\n          panel = this.props.initialData;\n          firebase\n            .database()\n            .ref(\"/users/\" + this.props.user.uid)\n            .update(panel);\n        }\n        let events = [];\n        if (panel.tasks !== undefined) {\n          let tasks = panel.tasks;\n          console.log(tasks);\n          Object.values(tasks).forEach((task) => {\n            if (task.taskType !== undefined) {\n              if (\n                task.fechaFin !== undefined &&\n                task.fechaInicio !== undefined\n              ) {\n                if (task.taskType === \"Evento\") {\n                  events.push({\n                    title: task.content,\n                    start: new Date(task.fechaInicio),\n                    end: new Date(task.fechaFin),\n                    color: \"#fb8c00\",\n                  });\n                } else {\n                  events.push({\n                    title: task.content,\n                    start: new Date(task.fechaInicio),\n                    end: new Date(task.fechaFin),\n                    color: \"#7cb342\",\n                  });\n                }\n              }\n            }\n            if (task.fechaVencimiento) {\n              events.push({\n                title: task.content,\n                start: task.fechaVencimiento,\n                color: \"#ffd600\",\n              });\n            }\n          });\n        }\n        let datas = {\n          calendarEvents: events,\n          loading: false,\n        };\n\n        this.setState(datas);\n      });\n  }\n\n  render() {\n    if (this.state.loading) {\n      return (\n        <div className=\"text-center mt-5\">\n          <ProgressSpinner />\n        </div>\n      );\n    } else {\n      return (\n        <React.Fragment>\n          <div className=\"legend-container mb-2 rounded\">\n            <ul className=\"legend p-2\">\n              <li>\n                <span className=\"evento\"></span> Eventos\n              </li>\n              <li>\n                <span className=\"fechaVencimiento\"></span> Tareas con fecha de\n                vencimiento\n              </li>\n              <li>\n                <span className=\"tareaPlanificada\"></span> Tareas planificadas\n              </li>\n            </ul>\n          </div>\n          <div className=\"app-calendar shadow p-4 rounded mb-3\">\n            <FullCalendar\n              locale={esLocale}\n              header={{\n                left: \"prev,next today\",\n                center: \"title\",\n                right: \"dayGridMonth,timeGridWeek,timeGridDay,listWeek\",\n              }}\n              plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\n              ref={this.calendarComponentRef}\n              weekends={this.state.calendarWeekends}\n              events={this.state.calendarEvents}\n            />\n          </div>\n        </React.Fragment>\n      );\n    }\n  }\n\n  toggleWeekends = () => {\n    this.setState({\n      // update a property\n      calendarWeekends: !this.state.calendarWeekends,\n    });\n  };\n\n  gotoPast = () => {\n    let calendarApi = this.calendarComponentRef.current.getApi();\n    calendarApi.gotoDate(\"2000-01-01\"); // call a method on the Calendar object\n  };\n}\n","import React from \"react\";\nimport { Chart } from \"primereact/chart\";\nimport { ScrollPanel } from \"primereact/scrollpanel\";\nimport { ProgressSpinner } from \"primereact/progressspinner\";\nimport moment from \"moment\";\nimport \"moment/locale/es\";\nimport firebase from \"firebase/app\";\nimport \"firebase/database\";\nexport default class Visualizar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      colors: [],\n      data: [],\n      labels: [],\n      proximasAcciones: [],\n      eventos: [],\n      loading: true,\n    };\n  }\n\n  componentDidMount() {\n    firebase\n      .database()\n      .ref(\"users/\" + this.props.user.uid)\n      .once(\"value\")\n      .then((snapshot) => {\n        let panel = snapshot.val();\n        if (panel === null) {\n          panel = this.props.initialData;\n          firebase\n            .database()\n            .ref(\"/users/\" + this.props.user.uid)\n            .update(panel);\n        }\n        let data = [];\n        let labels = [];\n        let colors = [];\n        let proximasAcciones = [];\n        let eventos = [];\n        if (panel.tasks !== undefined) {\n          let tasks = panel.tasks;\n\n          //Extraemos task de la columna de próximas acciones\n          const column = panel.columns[\"column-2\"];\n          if (column.taskIds !== undefined) {\n            proximasAcciones = column.taskIds.map((taskId) => tasks[taskId]);\n          }\n\n          Object.values(tasks).forEach((task) => {\n            moment.locale(\"es\");\n            if (task.fechaVencimiento !== undefined) {\n              let fecha1 = moment(new Date());\n              let fecha2 = moment(new Date(task.fechaVencimiento));\n              let diff = fecha2.diff(fecha1, \"days\");\n              if (diff > 0) {\n                data.push(fecha2.diff(fecha1, \"days\"));\n                labels.push(task.content);\n                colors.push(\n                  task.colorTask !== \"#fff\"\n                    ? task.colorTask\n                    : this.getRandomColor()\n                );\n                //console.log(fecha2.diff(fecha1, \"days\"), \" dias de diferencia\");\n              } else if (diff === 0) {\n                data.push(0.5);\n                labels.push(task.content + \"(Finaliza hoy)\");\n                colors.push(\n                  task.colorTask !== \"#fff\"\n                    ? task.colorTask\n                    : this.getRandomColor()\n                );\n              }\n            }\n            if (task.taskType !== undefined && task.taskType === \"Evento\") {\n              if (\n                task.fechaInicio !== undefined &&\n                task.fechaFin !== undefined\n              ) {\n                let diff1 =\n                  moment(new Date(task.fechaFin)).diff(new Date(), \"days\") >= 0;\n                let diff2 =\n                  moment(new Date(task.fechaInicio)).diff(new Date(), \"days\") <=\n                  7;\n                if (diff1 && diff2) {\n                  eventos.push(task);\n                }\n              }\n            }\n          });\n        }\n        let newState = {\n          data: data,\n          labels: labels,\n          colors: colors,\n          proximasAcciones: proximasAcciones,\n          eventos: eventos,\n          loading: false,\n        };\n\n        this.setState(newState);\n      });\n  }\n  getRandomColor() {\n    var letters = \"0123456789ABCDEF\";\n    var color = \"#\";\n    for (var i = 0; i < 6; i++) {\n      color += letters[Math.floor(Math.random() * 16)];\n    }\n    return color;\n  }\n  render() {\n    const data = {\n      labels: this.state.labels,\n      datasets: [\n        {\n          data: this.state.data,\n          backgroundColor: this.state.colors,\n        },\n      ],\n    };\n\n    let auxColors = [];\n\n    Object.values(this.state.proximasAcciones).forEach((task) => {\n      if (!auxColors.includes(task.colorTask)) {\n        auxColors.push(task.colorTask);\n      }\n    });\n    if (this.state.loading) {\n      return (\n        <div className=\"text-center mt-5\">\n          <ProgressSpinner />\n        </div>\n      );\n    } else {\n      return (\n        <>\n          <div className=\"d-flex justify-content-center align-items-center\">\n            <div className=\"h-50 d-flex flex-column align-items-center justify-content-center mr-5\">\n              <p className=\"h3 mb-3\">Tareas con fecha de vencimiento</p>\n              {data.labels.length === 0 ? (\n                <p className=\"font-weight-bold\" style={{ height: \"200px\" }}>\n                  No existen tareas con fecha de vencimiento.\n                </p>\n              ) : (\n                <Chart\n                  type=\"doughnut\"\n                  data={data}\n                  // options={options}\n                  style={{ width: \"600px\" }}\n                />\n              )}\n            </div>\n          </div>\n          <div className=\"d-flex justify-content-center\">\n            <div className=\"d-flex flex-column align-items-center justify-content-center mr-5\">\n              <p className=\"h3 mb-3\">Próximos Eventos</p>\n              <ScrollPanel\n                style={{\n                  height: \"400px\",\n                  width: \"500px\",\n                  backgroundColor: \"white\",\n                }}\n                className=\"align-self-end shadow rounded p-2 mb-3\"\n              >\n                {this.state.eventos.length === 0 ? (\n                  <p\n                    className=\"font-weight-bold m-2\"\n                    style={{ height: \"200px\" }}\n                  >\n                    No tienen ningún evento en los próximos 7 días.\n                  </p>\n                ) : (\n                  this.state.eventos.map((task) => {\n                    moment.locale(\"es\");\n                    return (\n                      <div\n                        key={task.id}\n                        className=\"p-2 m-2 rounded shadow\"\n                        style={{\n                          backgroundColor: task.colorTask,\n                          color: task.colorTask === \"#fff\" ? \"black\" : \"white\",\n                        }}\n                      >\n                        {task.content + \": \"}\n                        <span className=\"font-weight-bold\">\n                          {moment(new Date(task.fechaInicio)).format(\n                            \"DD-MMMM HH:mm\"\n                          )}\n                        </span>\n                        {moment(new Date(task.fechaInicio)).format(\n                          \"DD-MMMM\"\n                        ) ===\n                        moment(new Date(task.fechaFin)).format(\"DD-MMMM\") ? (\n                          <span className=\"font-weight-bold\">\n                            {\"-\" +\n                              moment(new Date(task.fechaFin)).format(\"HH:mm\")}\n                          </span>\n                        ) : (\n                          <span className=\"font-weight-bold\">\n                            {\" - \" +\n                              moment(new Date(task.fechaFin)).format(\n                                \"DD-MMMM  HH:mm\"\n                              )}\n                          </span>\n                        )}\n                      </div>\n                    );\n                  })\n                )}\n              </ScrollPanel>\n            </div>\n\n            <div className=\"d-flex flex-column align-items-center justify-content-center ml-5\">\n              <p className=\"h3 mb-3\">Próximas Acciones</p>\n              <ScrollPanel\n                style={{\n                  height: \"400px\",\n                  width: \"600px\",\n                  backgroundColor: \"white\",\n                }}\n                className=\"align-self-end shadow rounded p-2 mb-3\"\n              >\n                {this.state.proximasAcciones.length === 0 ? (\n                  <p\n                    className=\"font-weight-bold m-2\"\n                    style={{ height: \"200px\" }}\n                  >\n                    No existen tareas en la columna de próximas acciones.\n                  </p>\n                ) : (\n                  auxColors.map((color) => {\n                    return (\n                      <div\n                        key={color}\n                        className=\"p-3 d-flex  flex-wrap rounded m-1 \"\n                        style={{ backgroundColor: color }}\n                      >\n                        {this.state.proximasAcciones\n                          .filter((task) => task.colorTask === color)\n                          .map((task) => {\n                            return (\n                              <div\n                                key={task.id}\n                                className=\"p-2 m-2 rounded shadow\"\n                                style={{\n                                  backgroundColor: \"white\",\n                                  color: \"black\",\n                                  width: \"150px\",\n                                  fontSize: \"13px\",\n                                }}\n                              >\n                                {task.content}\n                              </div>\n                            );\n                          })}\n                      </div>\n                    );\n                  })\n                )}\n              </ScrollPanel>\n            </div>\n          </div>\n        </>\n      );\n    }\n  }\n}\n","import React from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\n\nexport default class CustomAvatar extends React.Component {\n  state = {\n    logout: false,\n  };\n\n  render() {\n    let button;\n    if (this.state.logout === true) {\n      button = (\n        <button\n          className=\"button-logout mt-2\"\n          onClick={this.props.handleLogout}\n        >\n          Cerrar sesión\n        </button>\n      );\n    }\n    return (\n      <div className=\"avatar d-flex flex-column align-items-end\">\n        <Avatar\n          alt={this.props.displayName}\n          src={this.props.photoURL}\n          onClick={() => this.setState({ logout: !this.state.logout })}\n        />\n        {button}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./App.scss\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport Panel from \"../Pages/Panel/Panel\";\nimport \"primereact/resources/themes/nova-light/theme.css\";\nimport \"primereact/resources/primereact.min.css\";\nimport \"primeicons/primeicons.css\";\nimport Calendar from \"../Pages/Calendar/Calendar\";\nimport Visualizar from \"../Pages/Visualizar/Visualizar\";\nimport CustomAvatar from \"./CustomAvatar\";\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  NavLink,\n} from \"react-router-dom\";\n\nlet initialData = {\n  tasks: {},\n  columns: {\n    \"column-1\": {\n      id: \"column-1\",\n      title: \"Inbox\",\n      taskIds: [],\n    },\n    \"column-2\": {\n      id: \"column-2\",\n      title: \"Próximas acciones\",\n      taskIds: [],\n    },\n    \"column-3\": {\n      id: \"column-3\",\n      title: \"Proyectos\",\n      taskIds: [],\n    },\n    \"column-4\": {\n      id: \"column-4\",\n      title: \"Algún día\",\n      taskIds: [],\n    },\n    \"column-5\": {\n      id: \"column-5\",\n      title: \"Eventos\",\n      taskIds: [],\n    },\n  },\n  // Facilitate reordering of the columns\n  columnOrder: [\"column-1\", \"column-2\", \"column-3\", \"column-4\", \"column-5\"],\n  visible: false,\n  loading: true,\n};\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      user: null,\n      logout: false,\n    };\n    this.handleAuth = this.handleAuth.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n  }\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged((user) => {\n      if (user !== undefined) {\n        this.setState({\n          user: user,\n        });\n      }\n    });\n  }\n\n  handleAuth() {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    firebase\n      .auth()\n      .signInWithPopup(provider)\n      .then((result) => console.log(`${result.user.email} ha iniciado sesión`))\n      .catch((error) => console.log(`Error ${error.code}: ${error.message}`));\n  }\n  handleLogout() {\n    firebase\n      .auth()\n      .signOut()\n      .then((result) => console.log(`${result.user.email} ha salido`))\n      .catch((error) => console.log(`Error ${error.code}: ${error.message}`));\n    this.setState({ logout: false });\n  }\n  renderLoginButton() {\n    //si el usuario está logueado\n    let button;\n    if (this.state.user) {\n      return (\n        <>\n          <Router>\n            <div className=\"d-flex justify-content-center\">\n              <nav\n                style={{ minWidth: \"600px\" }}\n                className=\"d-flex mt-4 mb-5 justify-content-around navContainer rounded shadow \"\n              >\n                <div className=\"p-2\">\n                  <NavLink exact={true} to=\"/\" activeClassName=\"activeNavItem\">\n                    Visualizar\n                  </NavLink>\n                </div>\n                <div className=\"p-2\">\n                  <NavLink to=\"/tablero\" activeClassName=\"activeNavItem\">\n                    Tablero\n                  </NavLink>\n                </div>\n                <div className=\"p-2\">\n                  <NavLink to=\"/calendario\" activeClassName=\"activeNavItem\">\n                    Calendario\n                  </NavLink>\n                </div>\n              </nav>\n              <CustomAvatar\n                displayName={this.state.user.displayName}\n                photoURL={this.state.user.photoURL}\n                handleLogout={() => this.handleLogout()}\n              />\n            </div>\n\n            <Switch>\n              <Route exact path=\"/\">\n                {\n                  <div>\n                    <Visualizar\n                      user={this.state.user}\n                      initialData={initialData}\n                    />\n                  </div>\n                }\n              </Route>\n              <Route exact path=\"/tablero\">\n                {\n                  <div>\n                    <Panel user={this.state.user} initialData={initialData} />\n                  </div>\n                }\n              </Route>\n              <Route exact path=\"/calendario\">\n                {\n                  <div>\n                    <Calendar\n                      user={this.state.user}\n                      initialData={initialData}\n                    />\n                  </div>\n                }\n              </Route>\n              <Route exact path=\"*\">\n                {\n                  <div>\n                    <p class=\"h1\">Oops!</p>\n                    <p class=\"h2\">No se encuentra la ruta especificada</p>\n                  </div>\n                }\n              </Route>\n            </Switch>\n          </Router>\n        </>\n      );\n      //si el usuario no está logueado\n    } else {\n      return (\n        <div className=\" loginBackground divComplete d-flex login align-items-center justify-content-center text-center\">\n          <div className=\"loginContainer d-flex flex-column align-items-center justify-content-center\">\n            <div>\n              <h1 className=\"loginHeader\">Getting Things Done</h1>\n              <button onClick={this.handleAuth} className=\"buttonLogin\">\n                <span className=\"fa fa-google p-2\"></span>\n                Entra con google\n              </button>\n            </div>\n          </div>\n        </div>\n      );\n    }\n  }\n  render() {\n    return <div className=\"divComplete\">{this.renderLoginButton()}</div>;\n  }\n}\n\nexport default App;\n","import App from \"./App.jsx\";\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n//import \"./index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport firebase from \"firebase\";\n\nconst config = {\n  apiKey: \"AIzaSyDNJIa3VYqtLI4LOs6ZYcYDZbsQpKcUW-c\",\n  authDomain: \"tfg-proyect.firebaseapp.com\",\n  databaseURL: \"https://tfg-proyect.firebaseio.com\",\n  projectId: \"tfg-proyect\",\n  storageBucket: \"tfg-proyect.appspot.com\",\n  messagingSenderId: \"964870376777\",\n  appId: \"1:964870376777:web:089d60e652f3b988f3de98\",\n  measurementId: \"G-CSPLBXW7YT\",\n};\nfirebase.initializeApp(config);\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}